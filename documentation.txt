|-------------------------------------------------------------------------|
| This file contents information of all functions implemented for drivers |
|_________________________________________________________________________|


|-- GPIO -----------------------------------------------------------------|

 /*********************************************************************
 * @fn      		  		- GPIO_Init
 *
 * @brief          			- Initializes GPIO preirpheral
 *
 * @param[GPIO_Handle_t]    - Base address of the GPIO handler
 *
 * @return            		- none
 *
 * @Note              		- none
 *
 */
 
 
 /*********************************************************************
 * @fn      		  		- GPIO_DeInit
 *
 * @brief             		- De-initializes GPIO preirpheral
 *
 * @param[GPIO_RegDef_t]    - Base address of the GPIO port
 *
 * @return            		- none
 *
 * @Note             		- none
 *
 */
 
 
 /*********************************************************************
 * @fn      		  		- GPIO_ClkControl
 *
 * @brief             		- Enables or disables peripheral clock for the given GPIO port
 *
 * @param[GPIO_RegDef_t]    - Base address of the GPIO port
 * @param[uint8_t]         	- Control type(see notes)
 *
 * @return            		- none
 *
 * @Note              		- Control type(param) = 0 / DISABLE macro => disable the clock
 *					  		- Control type(param) = 1 / ENABLE macro => enable the clock
 */
 
 
 /*********************************************************************
 * @fn      		  		- GPIO_ReadInput_Pin
 *
 * @brief             		- Reads an input of the given GPIO port at the provided pin 
 *
 * @param[GPIO_RegDef_t]    - Base address of the GPIO port
 * @param[uint8_t]         	- Pin Number to read data of
 *
 * @return[uint8_t]         - Data at the provided pin (1 or 0);
 *
 * @Note              		- none
 *
 */
 
 
 /*********************************************************************
 * @fn      		  		- GPIO_ReadInput_Port
 *
 * @brief             		- Reads an input of the given GPIO port at all pins 
 *
 * @param[GPIO_RegDef_t]    - Base address of the GPIO port
 *
 * @return[uint16_t]        - Data of the GPIO port (of all pins);
 *
 * @Note              		- none
 *
 */
 
 
 /*********************************************************************
 * @fn      		  		- GPIO_WriteOutput_Pin
 *
 * @brief             		- Writes given data to the provided pin of the given GPIO port
 *
 * @param[GPIO_RegDef_t]    - Base address of the GPIO port
 * @param[uint8_t]         	- Pin Number to write data to
 * @param[uint8_t]         	- Data to be written
 *
 * @return            		- none
 *
 * @Note              		- Data kind: 1 / ENABLE macro or 0 / DISABLE macro
 */
 
 
 /*********************************************************************
 * @fn      		  		- GPIO_WriteOutput_Port
 *
 * @brief             		- Writes given data to the given GPIO port
 *
 * @param[GPIO_RegDef_t]    - Base address of the GPIO port
 * @param[uint16_t]         - Data to be written
 *
 * @return            		- none
 *
 * @Note              		- Data kind: 16 bits of 1s / 0s
 */
 
 
 /*********************************************************************
 * @fn      		  		- GPIO_ToggleOutput_Pin
 *
 * @brief             		- Flips value of the provided pin of the given GPIO port
 *
 * @param[GPIO_RegDef_t]    - Base address of the GPIO port
 * @param[uint8_t]         	- Pin Number to toggle data of
 *
 * @return            		- none
 *
 * @Note              		- Meaning of "Flips": 0 => 1 / 1 => 0
 */
 
 
 /*********************************************************************
 * @fn      		  		- GPIO_IrqConfig
 *
 * @brief             		- Configures IRQ based on arguments provided
 *
 * @param[uint8_t]    		- IRQ number
 * @param[uint8_t]         	- IRQ priority
 * @param[uint8_t]         	- Control type (see notes)
 *
 * @return            		- none
 *
 * @Note              		- Control type(param) = 0 / DISABLE macro => disable the clock
 *					  		- Control type(param) = 1 / ENABLE macro => enable the clock
 */
 
 
 /*********************************************************************
 * @fn      		  		- GPIO_IrqHandling
 *
 * @brief             		- Handles incoming IRQ based on the provided pin number 
 *
 * @param[uint8_t]    		- Pin number
 *
 * @return            		- none
 *
 * @Note             		- none
 *
 */